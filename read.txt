CREATE TABLE Users (
    UserID INT PRIMARY KEY AUTO_INCREMENT,
    Username VARCHAR(50) NOT NULL,
    Password VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL,
    Role ENUM('Author', 'Reviewer', 'Editor') NOT NULL,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Affiliation VARCHAR(100),
    Bio TEXT
);

CREATE TABLE Authors (
    AuthorID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Affiliation VARCHAR(100),
    Email VARCHAR(100),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE Articles (
    ArticleID INT PRIMARY KEY AUTO_INCREMENT,
    Title VARCHAR(200),
    Abstract TEXT,
    Keywords VARCHAR(200),
    SubmissionDate DATE,
    PublicationDate DATE,
    Status ENUM('Submitted', 'Under Review', 'Accepted', 'Rejected', 'Published') NOT NULL,
    DOI VARCHAR(50),
    FilePath VARCHAR(200)
);

CREATE TABLE Authors_Articles (
    AuthorArticleID INT PRIMARY KEY AUTO_INCREMENT,
    AuthorID INT,
    ArticleID INT,
    FOREIGN KEY (AuthorID) REFERENCES Authors(AuthorID),
    FOREIGN KEY (ArticleID) REFERENCES Articles(ArticleID)
);

CREATE TABLE Reviews (
    ReviewID INT PRIMARY KEY AUTO_INCREMENT,
    ArticleID INT,
    ReviewerID INT,
    ReviewDate DATE,
    Comments TEXT,
    Rating INT,
    FOREIGN KEY (ArticleID) REFERENCES Articles(ArticleID),
    FOREIGN KEY (ReviewerID) REFERENCES Users(UserID)
);

CREATE TABLE Editors (
    EditorID INT PRIMARY KEY AUTO_INCREMENT,
    UserID INT,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    FOREIGN KEY (UserID) REFERENCES Users(UserID)
);

CREATE TABLE JournalIssues (
    IssueID INT PRIMARY KEY AUTO_INCREMENT,
    Volume INT,
    IssueNumber INT,
    PublicationDate DATE
);

CREATE TABLE Article_Issues (
    ArticleIssueID INT PRIMARY KEY AUTO_INCREMENT,
    ArticleID INT,
    IssueID INT,
    FOREIGN KEY (ArticleID) REFERENCES Articles(ArticleID),
    FOREIGN KEY (IssueID) REFERENCES JournalIssues(IssueID)
);
